package com.testpackage;

import java.io.File; 
import java.io.FileInputStream; 
import java.io.FileNotFoundException;  
import java.io.FileOutputStream; 
import java.io.IOException; 
import java.io.ObjectInputStream; 
import java.io.ObjectOutputStream;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;  

public class UserDao { 
	
	HashMap<String,String> strToHash = new HashMap<String,String>();
	HashMap<String,String> hashToStr = new HashMap<String,String>();
   
	public List<User> getAllUsers(){ 
      
      List<User> userList = null; 
      try { 
         File file = new File("Users.dat"); 
         if (!file.exists()) { 
            User user = new User(1, "Mahesh", "Teacher"); 
            userList = new ArrayList<User>(); 
            userList.add(user); 
            saveUserList(userList); 
         } 
         else{ 
            FileInputStream fis = new FileInputStream(file); 
            ObjectInputStream ois = new ObjectInputStream(fis); 
            userList = (List<User>) ois.readObject(); 
            ois.close(); 
         } 
      } catch (IOException e) { 
         e.printStackTrace(); 
      } catch (ClassNotFoundException e) { 
         e.printStackTrace(); 
      }   
      return userList; 
   } 
   
   public String getDecryptedMessage(String str){
	      if(hashToStr.get(str) != null) return hashToStr.get(str);
	      return "404: Original message not found.";
   }
   
   public String getEncryptedMessage(String str){
	 
	   if(strToHash.get(str) != null) return strToHash.get(str);
	   try {
           byte[] hashBytes = MessageDigest.getInstance("SHA-256").digest(str.getBytes());
           String text = new BigInteger(1, hashBytes).toString(16);
           while (text.length() < 32) {
               text = "0" + text;
           }
           strToHash.put(str, text);
           hashToStr.put(text, str);
           return text;
       }
       catch (NoSuchAlgorithmException e) {
           return "Exception: No Such Algorithm: " + e;
       }
   }
   
   private void saveUserList(List<User> userList){ 
      try { 
         File file = new File("Users.dat"); 
         FileOutputStream fos;  
         fos = new FileOutputStream(file); 
         ObjectOutputStream oos = new ObjectOutputStream(fos); 
         oos.writeObject(userList); 
         oos.close(); 
      } catch (FileNotFoundException e) { 
         e.printStackTrace(); 
      } catch (IOException e) { 
         e.printStackTrace(); 
      } 
   }    
}
